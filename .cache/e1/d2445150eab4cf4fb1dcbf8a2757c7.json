{"id":"node_modules/parse/lib/node/ParsePolygon.js","dependencies":[{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\package.json","includedInParent":true,"mtime":1601539074104},{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\package.json","includedInParent":true,"mtime":1601536374446},{"name":"./ParseGeoPoint","loc":{"line":8,"column":52},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\ParsePolygon.js","resolved":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\ParseGeoPoint.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Creates a new Polygon with any of the following forms:<br>\n *   <pre>\n *   new Polygon([[0,0],[0,1],[1,1],[1,0]])\n *   new Polygon([GeoPoint, GeoPoint, GeoPoint])\n *   </pre>\n *\n * <p>Represents a coordinates that may be associated\n * with a key in a ParseObject or used as a reference point for geo queries.\n * This allows proximity-based queries on the key.</p>\n *\n * <p>Example:<pre>\n *   var polygon = new Parse.Polygon([[0,0],[0,1],[1,1],[1,0]]);\n *   var object = new Parse.Object(\"PlaceObject\");\n *   object.set(\"area\", polygon);\n *   object.save();</pre></p>\n * @alias Parse.Polygon\n */\n\n\nclass ParsePolygon {\n  /*:: _coordinates: Array<Array<number>>;*/\n\n  /**\n   * @param {(Number[][]|Parse.GeoPoint[])} coordinates An Array of coordinate pairs\n   */\n  constructor(arg1\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  ) {\n    this._coordinates = ParsePolygon._validate(arg1);\n  }\n  /**\n   * Coordinates value for this Polygon.\n   * Throws an exception if not valid type.\n   * @property coordinates\n   * @type Array\n   */\n\n\n  get coordinates()\n  /*: Array<Array<number>>*/\n  {\n    return this._coordinates;\n  }\n\n  set coordinates(coords\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  ) {\n    this._coordinates = ParsePolygon._validate(coords);\n  }\n  /**\n   * Returns a JSON representation of the Polygon, suitable for Parse.\n   * @return {Object}\n   */\n\n\n  toJSON()\n  /*: { __type: string; coordinates: Array<Array<number>>;}*/\n  {\n    ParsePolygon._validate(this._coordinates);\n\n    return {\n      __type: 'Polygon',\n      coordinates: this._coordinates\n    };\n  }\n  /**\n   * Checks if two polygons are equal\n   * @param {(Parse.Polygon|Object)} other\n   * @returns {Boolean}\n   */\n\n\n  equals(other\n  /*: mixed*/\n  )\n  /*: boolean*/\n  {\n    if (!(other instanceof ParsePolygon) || this.coordinates.length !== other.coordinates.length) {\n      return false;\n    }\n\n    let isEqual = true;\n\n    for (let i = 1; i < this._coordinates.length; i += 1) {\n      if (this._coordinates[i][0] != other.coordinates[i][0] || this._coordinates[i][1] != other.coordinates[i][1]) {\n        isEqual = false;\n        break;\n      }\n    }\n\n    return isEqual;\n  }\n  /**\n   *\n   * @param {Parse.GeoPoint} point\n   * @returns {Boolean} Returns if the point is contained in the polygon\n   */\n\n\n  containsPoint(point\n  /*: ParseGeoPoint*/\n  )\n  /*: boolean*/\n  {\n    let minX = this._coordinates[0][0];\n    let maxX = this._coordinates[0][0];\n    let minY = this._coordinates[0][1];\n    let maxY = this._coordinates[0][1];\n\n    for (let i = 1; i < this._coordinates.length; i += 1) {\n      const p = this._coordinates[i];\n      minX = Math.min(p[0], minX);\n      maxX = Math.max(p[0], maxX);\n      minY = Math.min(p[1], minY);\n      maxY = Math.max(p[1], maxY);\n    }\n\n    const outside = point.latitude < minX || point.latitude > maxX || point.longitude < minY || point.longitude > maxY;\n\n    if (outside) {\n      return false;\n    }\n\n    let inside = false;\n\n    for (let i = 0, j = this._coordinates.length - 1; i < this._coordinates.length; j = i++) {\n      const startX = this._coordinates[i][0];\n      const startY = this._coordinates[i][1];\n      const endX = this._coordinates[j][0];\n      const endY = this._coordinates[j][1];\n      const intersect = startY > point.longitude != endY > point.longitude && point.latitude < (endX - startX) * (point.longitude - startY) / (endY - startY) + startX;\n\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    return inside;\n  }\n  /**\n   * Validates that the list of coordinates can form a valid polygon\n   * @param {Array} coords the list of coordinated to validate as a polygon\n   * @throws {TypeError}\n   */\n\n\n  static _validate(coords\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  )\n  /*: Array<Array<number>>*/\n  {\n    if (!Array.isArray(coords)) {\n      throw new TypeError('Coordinates must be an Array');\n    }\n\n    if (coords.length < 3) {\n      throw new TypeError('Polygon must have at least 3 GeoPoints or Points');\n    }\n\n    const points = [];\n\n    for (let i = 0; i < coords.length; i += 1) {\n      const coord = coords[i];\n      let geoPoint;\n\n      if (coord instanceof _ParseGeoPoint.default) {\n        geoPoint = coord;\n      } else if (Array.isArray(coord) && coord.length === 2) {\n        geoPoint = new _ParseGeoPoint.default(coord[0], coord[1]);\n      } else {\n        throw new TypeError('Coordinates must be an Array of GeoPoints or Points');\n      }\n\n      points.push([geoPoint.latitude, geoPoint.longitude]);\n    }\n\n    return points;\n  }\n\n}\n\nvar _default = ParsePolygon;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/parse/lib/node/ParsePolygon.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}}],"sources":{"node_modules/parse/lib/node/ParsePolygon.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Creates a new Polygon with any of the following forms:<br>\n *   <pre>\n *   new Polygon([[0,0],[0,1],[1,1],[1,0]])\n *   new Polygon([GeoPoint, GeoPoint, GeoPoint])\n *   </pre>\n *\n * <p>Represents a coordinates that may be associated\n * with a key in a ParseObject or used as a reference point for geo queries.\n * This allows proximity-based queries on the key.</p>\n *\n * <p>Example:<pre>\n *   var polygon = new Parse.Polygon([[0,0],[0,1],[1,1],[1,0]]);\n *   var object = new Parse.Object(\"PlaceObject\");\n *   object.set(\"area\", polygon);\n *   object.save();</pre></p>\n * @alias Parse.Polygon\n */\n\n\nclass ParsePolygon {\n  /*:: _coordinates: Array<Array<number>>;*/\n\n  /**\n   * @param {(Number[][]|Parse.GeoPoint[])} coordinates An Array of coordinate pairs\n   */\n  constructor(arg1\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  ) {\n    this._coordinates = ParsePolygon._validate(arg1);\n  }\n  /**\n   * Coordinates value for this Polygon.\n   * Throws an exception if not valid type.\n   * @property coordinates\n   * @type Array\n   */\n\n\n  get coordinates()\n  /*: Array<Array<number>>*/\n  {\n    return this._coordinates;\n  }\n\n  set coordinates(coords\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  ) {\n    this._coordinates = ParsePolygon._validate(coords);\n  }\n  /**\n   * Returns a JSON representation of the Polygon, suitable for Parse.\n   * @return {Object}\n   */\n\n\n  toJSON()\n  /*: { __type: string; coordinates: Array<Array<number>>;}*/\n  {\n    ParsePolygon._validate(this._coordinates);\n\n    return {\n      __type: 'Polygon',\n      coordinates: this._coordinates\n    };\n  }\n  /**\n   * Checks if two polygons are equal\n   * @param {(Parse.Polygon|Object)} other\n   * @returns {Boolean}\n   */\n\n\n  equals(other\n  /*: mixed*/\n  )\n  /*: boolean*/\n  {\n    if (!(other instanceof ParsePolygon) || this.coordinates.length !== other.coordinates.length) {\n      return false;\n    }\n\n    let isEqual = true;\n\n    for (let i = 1; i < this._coordinates.length; i += 1) {\n      if (this._coordinates[i][0] != other.coordinates[i][0] || this._coordinates[i][1] != other.coordinates[i][1]) {\n        isEqual = false;\n        break;\n      }\n    }\n\n    return isEqual;\n  }\n  /**\n   *\n   * @param {Parse.GeoPoint} point\n   * @returns {Boolean} Returns if the point is contained in the polygon\n   */\n\n\n  containsPoint(point\n  /*: ParseGeoPoint*/\n  )\n  /*: boolean*/\n  {\n    let minX = this._coordinates[0][0];\n    let maxX = this._coordinates[0][0];\n    let minY = this._coordinates[0][1];\n    let maxY = this._coordinates[0][1];\n\n    for (let i = 1; i < this._coordinates.length; i += 1) {\n      const p = this._coordinates[i];\n      minX = Math.min(p[0], minX);\n      maxX = Math.max(p[0], maxX);\n      minY = Math.min(p[1], minY);\n      maxY = Math.max(p[1], maxY);\n    }\n\n    const outside = point.latitude < minX || point.latitude > maxX || point.longitude < minY || point.longitude > maxY;\n\n    if (outside) {\n      return false;\n    }\n\n    let inside = false;\n\n    for (let i = 0, j = this._coordinates.length - 1; i < this._coordinates.length; j = i++) {\n      const startX = this._coordinates[i][0];\n      const startY = this._coordinates[i][1];\n      const endX = this._coordinates[j][0];\n      const endY = this._coordinates[j][1];\n      const intersect = startY > point.longitude != endY > point.longitude && point.latitude < (endX - startX) * (point.longitude - startY) / (endY - startY) + startX;\n\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    return inside;\n  }\n  /**\n   * Validates that the list of coordinates can form a valid polygon\n   * @param {Array} coords the list of coordinated to validate as a polygon\n   * @throws {TypeError}\n   */\n\n\n  static _validate(coords\n  /*: Array<Array<number>> | Array<ParseGeoPoint>*/\n  )\n  /*: Array<Array<number>>*/\n  {\n    if (!Array.isArray(coords)) {\n      throw new TypeError('Coordinates must be an Array');\n    }\n\n    if (coords.length < 3) {\n      throw new TypeError('Polygon must have at least 3 GeoPoints or Points');\n    }\n\n    const points = [];\n\n    for (let i = 0; i < coords.length; i += 1) {\n      const coord = coords[i];\n      let geoPoint;\n\n      if (coord instanceof _ParseGeoPoint.default) {\n        geoPoint = coord;\n      } else if (Array.isArray(coord) && coord.length === 2) {\n        geoPoint = new _ParseGeoPoint.default(coord[0], coord[1]);\n      } else {\n        throw new TypeError('Coordinates must be an Array of GeoPoints or Points');\n      }\n\n      points.push([geoPoint.latitude, geoPoint.longitude]);\n    }\n\n    return points;\n  }\n\n}\n\nvar _default = ParsePolygon;\nexports.default = _default;"},"lineCount":209}},"error":null,"hash":"cbdf6e23e7694ca1d95bcc22ce7066b3","cacheData":{"env":{}}}