{"id":"MnXg","dependencies":[{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\package.json","includedInParent":true,"mtime":1601548434274},{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\package.json","includedInParent":true,"mtime":1601536374446},{"name":"crypto-js/aes","loc":{"line":5,"column":14},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\CryptoController.js","resolved":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\crypto-js\\aes.js"},{"name":"crypto-js/enc-utf8","loc":{"line":6,"column":14},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\CryptoController.js","resolved":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\crypto-js\\enc-utf8.js"}],"generated":{"js":"\"use strict\";let t,r;t=require(\"crypto-js/aes\"),r=require(\"crypto-js/enc-utf8\");const e={encrypt:(r,e)=>t.encrypt(JSON.stringify(r),e).toString(),decrypt:(e,c)=>t.decrypt(e,c).toString(r)};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":3,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":4,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":5,"column":0},"generated":{"line":1,"column":21}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":5,"column":0},"generated":{"line":1,"column":23}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":5,"column":0},"generated":{"line":1,"column":31}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":6,"column":0},"generated":{"line":1,"column":48}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":6,"column":0},"generated":{"line":1,"column":50}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":6,"column":0},"generated":{"line":1,"column":58}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":7,"column":0},"generated":{"line":1,"column":80}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":7,"column":0},"generated":{"line":1,"column":86}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":7,"column":0},"generated":{"line":1,"column":88}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":8,"column":0},"generated":{"line":1,"column":89}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":8,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":8,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":10,"column":0},"generated":{"line":1,"column":100}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":114}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":119}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":129}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":15,"column":0},"generated":{"line":1,"column":132}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":16,"column":0},"generated":{"line":1,"column":135}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":19,"column":0},"generated":{"line":1,"column":146}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":19,"column":0},"generated":{"line":1,"column":154}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":19,"column":0},"generated":{"line":1,"column":155}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":21,"column":0},"generated":{"line":1,"column":157}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":161}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":163}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":171}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":173}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":176}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":26,"column":0},"generated":{"line":1,"column":185}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":31,"column":0},"generated":{"line":1,"column":189}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":31,"column":0},"generated":{"line":1,"column":196}},{"source":"node_modules/parse/lib/node/CryptoController.js","original":{"line":31,"column":0},"generated":{"line":1,"column":204}}],"sources":{"node_modules/parse/lib/node/CryptoController.js":"\"use strict\";\n\nlet AES;\nlet ENC;\nAES = require('crypto-js/aes');\nENC = require('crypto-js/enc-utf8');\nconst CryptoController = {\n  encrypt(obj\n  /*: any*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const encrypted = AES.encrypt(JSON.stringify(obj), secretKey);\n    return encrypted.toString();\n  },\n\n  decrypt(encryptedText\n  /*: string*/\n  , secretKey\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    const decryptedStr = AES.decrypt(encryptedText, secretKey).toString(ENC);\n    return decryptedStr;\n  }\n\n};\nmodule.exports = CryptoController;"},"lineCount":null}},"error":null,"hash":"44aa9f348e11eb2504ca07f7d21652e2","cacheData":{"env":{}}}