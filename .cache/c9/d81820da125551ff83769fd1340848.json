{"id":"node_modules/parse/lib/node/ParseFile.js","dependencies":[{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\package.json","includedInParent":true,"mtime":1601548434274},{"name":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\package.json","includedInParent":true,"mtime":1601536374446},{"name":"./CoreManager","loc":{"line":8,"column":50},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\ParseFile.js","resolved":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\CoreManager.js"},{"name":"https","loc":{"line":623,"column":60},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\ParseFile.js","resolved":"C:\\Users\\Mage\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\https-browserify\\index.js"},{"name":"http","loc":{"line":623,"column":79},"parent":"C:\\Users\\Mage\\Virtual\\projects\\schedule-frontend\\node_modules\\parse\\lib\\node\\ParseFile.js","resolved":"C:\\Users\\Mage\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\stream-http\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nlet XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource = {\n  format: 'file';\n  file: Blob;\n  type: string\n} | {\n  format: 'base64';\n  base64: string;\n  type: string\n} | {\n  format: 'uri';\n  uri: string;\n  type: string\n};*/\nconst dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n * @alias Parse.File\n */\n\n\nclass ParseFile {\n  /*:: _name: string;*/\n\n  /*:: _url: ?string;*/\n\n  /*:: _source: FileSource;*/\n\n  /*:: _previousSave: ?Promise<ParseFile>;*/\n\n  /*:: _data: ?string;*/\n\n  /*:: _requestTask: ?any;*/\n\n  /*:: _metadata: ?Object;*/\n\n  /*:: _tags: ?Object;*/\n\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  constructor(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    const specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if (Array.isArray(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        const base64 = data.base64;\n        const commaIndex = base64.indexOf(',');\n\n        if (commaIndex !== -1) {\n          const matches = dataUriRegexp.exec(base64.slice(0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = base64.slice(commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @return {Promise} Promise that is resolve with base64 data\n   */\n\n\n  async getData()\n  /*: Promise<String>*/\n  {\n    if (this._data) {\n      return this._data;\n    }\n\n    if (!this._url) {\n      throw new Error('Cannot retrieve data for unsaved ParseFile.');\n    }\n\n    const controller = _CoreManager.default.getFileController();\n\n    const result = await controller.download(this._url, {\n      requestTask: task => this._requestTask = task\n    });\n    this._data = result.base64;\n    return this._data;\n  }\n  /**\n   * Gets the name of the file. Before save is called, this is the filename\n   * given by the user. After save is called, that name gets prefixed with a\n   * unique identifier.\n   * @return {String}\n   */\n\n\n  name()\n  /*: string*/\n  {\n    return this._name;\n  }\n  /**\n   * Gets the url of the file. It is only available after you save the file or\n   * after you get the file from a Parse.Object.\n   * @param {Object} options An object to specify url options\n   * @return {String}\n   */\n\n\n  url(options\n  /*:: ?: { forceSecure?: boolean }*/\n  )\n  /*: ?string*/\n  {\n    options = options || {};\n\n    if (!this._url) {\n      return;\n    }\n\n    if (options.forceSecure) {\n      return this._url.replace(/^http:\\/\\//i, 'https://');\n    } else {\n      return this._url;\n    }\n  }\n  /**\n   * Gets the metadata of the file.\n   * @return {Object}\n   */\n\n\n  metadata()\n  /*: Object*/\n  {\n    return this._metadata;\n  }\n  /**\n   * Gets the tags of the file.\n   * @return {Object}\n   */\n\n\n  tags()\n  /*: Object*/\n  {\n    return this._tags;\n  }\n  /**\n   * Saves the file to the Parse cloud.\n   * @param {Object} options\n   *  * Valid options are:<ul>\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n   *     be used for this request.\n   *   <li>sessionToken: A valid session token, used for making a request on\n   *     behalf of a specific user.\n   *   <li>progress: In Browser only, callback for upload progress. For example:\n   * <pre>\n   * let parseFile = new Parse.File(name, file);\n   * parseFile.save({\n   *   progress: (progressValue, loaded, total, { type }) => {\n   *     if (type === \"upload\" && progressValue !== null) {\n   *       // Update the UI using progressValue\n   *     }\n   *   }\n   * });\n   * </pre>\n   * </ul>\n   * @return {Promise} Promise that is resolved when the save finishes.\n   */\n\n\n  save(options\n  /*:: ?: FullOptions*/\n  ) {\n    options = options || {};\n\n    options.requestTask = task => this._requestTask = task;\n\n    options.metadata = this._metadata;\n    options.tags = this._tags;\n\n    const controller = _CoreManager.default.getFileController();\n\n    if (!this._previousSave) {\n      if (this._source.format === 'file') {\n        this._previousSave = controller.saveFile(this._name, this._source, options).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._data = null;\n          this._requestTask = null;\n          return this;\n        });\n      } else if (this._source.format === 'uri') {\n        this._previousSave = controller.download(this._source.uri, options).then(result => {\n          if (!(result && result.base64)) {\n            return {};\n          }\n\n          const newSource = {\n            format: 'base64',\n            base64: result.base64,\n            type: result.contentType\n          };\n          this._data = result.base64;\n          this._requestTask = null;\n          return controller.saveBase64(this._name, newSource, options);\n        }).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._requestTask = null;\n          return this;\n        });\n      } else {\n        this._previousSave = controller.saveBase64(this._name, this._source, options).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._requestTask = null;\n          return this;\n        });\n      }\n    }\n\n    if (this._previousSave) {\n      return this._previousSave;\n    }\n  }\n  /**\n   * Aborts the request if it has already been sent.\n   */\n\n\n  cancel() {\n    if (this._requestTask && typeof this._requestTask.abort === 'function') {\n      this._requestTask.abort();\n    }\n\n    this._requestTask = null;\n  }\n  /**\n   * Deletes the file from the Parse cloud.\n   * In Cloud Code and Node only with Master Key\n   *\n   * @return {Promise} Promise that is resolved when the delete finishes.\n   */\n\n\n  destroy() {\n    if (!this._name) {\n      throw new Error('Cannot delete an unsaved ParseFile.');\n    }\n\n    const controller = _CoreManager.default.getFileController();\n\n    return controller.deleteFile(this._name).then(() => {\n      this._data = null;\n      this._requestTask = null;\n      return this;\n    });\n  }\n\n  toJSON()\n  /*: { name: ?string, url: ?string }*/\n  {\n    return {\n      __type: 'File',\n      name: this._name,\n      url: this._url\n    };\n  }\n\n  equals(other\n  /*: mixed*/\n  )\n  /*: boolean*/\n  {\n    if (this === other) {\n      return true;\n    } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n    return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n  }\n  /**\n   * Sets metadata to be saved with file object. Overwrites existing metadata\n   * @param {Object} metadata Key value pairs to be stored with file object\n   */\n\n\n  setMetadata(metadata\n  /*: any*/\n  ) {\n    if (metadata && typeof metadata === 'object') {\n      Object.keys(metadata).forEach(key => {\n        this.addMetadata(key, metadata[key]);\n      });\n    }\n  }\n  /**\n   * Sets metadata to be saved with file object. Adds to existing metadata\n   * @param {String} key\n   * @param {Mixed} value\n   */\n\n\n  addMetadata(key\n  /*: string*/\n  , value\n  /*: any*/\n  ) {\n    if (typeof key === 'string') {\n      this._metadata[key] = value;\n    }\n  }\n  /**\n   * Sets tags to be saved with file object. Overwrites existing tags\n   * @param {Object} tags Key value pairs to be stored with file object\n   */\n\n\n  setTags(tags\n  /*: any*/\n  ) {\n    if (tags && typeof tags === 'object') {\n      Object.keys(tags).forEach(key => {\n        this.addTag(key, tags[key]);\n      });\n    }\n  }\n  /**\n   * Sets tags to be saved with file object. Adds to existing tags\n   * @param {String} key\n   * @param {Mixed} value\n   */\n\n\n  addTag(key\n  /*: string*/\n  , value\n  /*: string*/\n  ) {\n    if (typeof key === 'string') {\n      this._tags[key] = value;\n    }\n  }\n\n  static fromJSON(obj)\n  /*: ParseFile*/\n  {\n    if (obj.__type !== 'File') {\n      throw new TypeError('JSON object does not represent a ParseFile');\n    }\n\n    const file = new ParseFile(obj.name);\n    file._url = obj.url;\n    return file;\n  }\n\n  static encodeBase64(bytes\n  /*: Array<number>*/\n  )\n  /*: string*/\n  {\n    const chunks = [];\n    chunks.length = Math.ceil(bytes.length / 3);\n\n    for (let i = 0; i < chunks.length; i++) {\n      const b1 = bytes[i * 3];\n      const b2 = bytes[i * 3 + 1] || 0;\n      const b3 = bytes[i * 3 + 2] || 0;\n      const has2 = i * 3 + 1 < bytes.length;\n      const has3 = i * 3 + 2 < bytes.length;\n      chunks[i] = [b64Digit(b1 >> 2 & 0x3F), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0F), has2 ? b64Digit(b2 << 2 & 0x3C | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3F) : '='].join('');\n    }\n\n    return chunks.join('');\n  }\n\n}\n\nconst DefaultController = {\n  saveFile: async function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'file') {\n      throw new Error('saveFile can only be used with File-type sources.');\n    }\n\n    const base64Data = await new Promise((res, rej) => {\n      // eslint-disable-next-line no-undef\n      const reader = new FileReader();\n      reader.readAsDataURL(source.file);\n\n      reader.onload = () => res(reader.result);\n\n      reader.onerror = error => rej(error);\n    }); // we only want the data after the comma\n    // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n    const [first, second] = base64Data.split(','); // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n    // use the entire string instead\n\n    const data = second ? second : first;\n    const newSource = {\n      format: 'base64',\n      base64: data,\n      type: source.type || (source.file ? source.file.type : null)\n    };\n    return await DefaultController.saveBase64(name, newSource, options);\n  },\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    const data\n    /*: { base64: any; _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return new Promise((resolve, reject) => {\n        const client = uri.indexOf('https') === 0 ? require('https') : require('http');\n        const req = client.get(uri, resp => {\n          resp.setEncoding('base64');\n          let base64 = '';\n          resp.on('data', data => base64 += data);\n          resp.on('end', () => {\n            resolve({\n              base64,\n              contentType: resp.headers['content-type']\n            });\n          });\n        });\n        req.on('abort', () => {\n          resolve({});\n        });\n        req.on('error', reject);\n        options.requestTask(req);\n      });\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        const bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name) {\n    const headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID'),\n      'X-Parse-Master-Key': _CoreManager.default.get('MASTER_KEY')\n    };\n\n    let url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(response => {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return Promise.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n\n  _setXHR(xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  }\n\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/parse/lib/node/ParseFile.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}}],"sources":{"node_modules/parse/lib/node/ParseFile.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nlet XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource = {\n  format: 'file';\n  file: Blob;\n  type: string\n} | {\n  format: 'base64';\n  base64: string;\n  type: string\n} | {\n  format: 'uri';\n  uri: string;\n  type: string\n};*/\nconst dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n * @alias Parse.File\n */\n\n\nclass ParseFile {\n  /*:: _name: string;*/\n\n  /*:: _url: ?string;*/\n\n  /*:: _source: FileSource;*/\n\n  /*:: _previousSave: ?Promise<ParseFile>;*/\n\n  /*:: _data: ?string;*/\n\n  /*:: _requestTask: ?any;*/\n\n  /*:: _metadata: ?Object;*/\n\n  /*:: _tags: ?Object;*/\n\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  constructor(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    const specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if (Array.isArray(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        const base64 = data.base64;\n        const commaIndex = base64.indexOf(',');\n\n        if (commaIndex !== -1) {\n          const matches = dataUriRegexp.exec(base64.slice(0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = base64.slice(commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @return {Promise} Promise that is resolve with base64 data\n   */\n\n\n  async getData()\n  /*: Promise<String>*/\n  {\n    if (this._data) {\n      return this._data;\n    }\n\n    if (!this._url) {\n      throw new Error('Cannot retrieve data for unsaved ParseFile.');\n    }\n\n    const controller = _CoreManager.default.getFileController();\n\n    const result = await controller.download(this._url, {\n      requestTask: task => this._requestTask = task\n    });\n    this._data = result.base64;\n    return this._data;\n  }\n  /**\n   * Gets the name of the file. Before save is called, this is the filename\n   * given by the user. After save is called, that name gets prefixed with a\n   * unique identifier.\n   * @return {String}\n   */\n\n\n  name()\n  /*: string*/\n  {\n    return this._name;\n  }\n  /**\n   * Gets the url of the file. It is only available after you save the file or\n   * after you get the file from a Parse.Object.\n   * @param {Object} options An object to specify url options\n   * @return {String}\n   */\n\n\n  url(options\n  /*:: ?: { forceSecure?: boolean }*/\n  )\n  /*: ?string*/\n  {\n    options = options || {};\n\n    if (!this._url) {\n      return;\n    }\n\n    if (options.forceSecure) {\n      return this._url.replace(/^http:\\/\\//i, 'https://');\n    } else {\n      return this._url;\n    }\n  }\n  /**\n   * Gets the metadata of the file.\n   * @return {Object}\n   */\n\n\n  metadata()\n  /*: Object*/\n  {\n    return this._metadata;\n  }\n  /**\n   * Gets the tags of the file.\n   * @return {Object}\n   */\n\n\n  tags()\n  /*: Object*/\n  {\n    return this._tags;\n  }\n  /**\n   * Saves the file to the Parse cloud.\n   * @param {Object} options\n   *  * Valid options are:<ul>\n   *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n   *     be used for this request.\n   *   <li>sessionToken: A valid session token, used for making a request on\n   *     behalf of a specific user.\n   *   <li>progress: In Browser only, callback for upload progress. For example:\n   * <pre>\n   * let parseFile = new Parse.File(name, file);\n   * parseFile.save({\n   *   progress: (progressValue, loaded, total, { type }) => {\n   *     if (type === \"upload\" && progressValue !== null) {\n   *       // Update the UI using progressValue\n   *     }\n   *   }\n   * });\n   * </pre>\n   * </ul>\n   * @return {Promise} Promise that is resolved when the save finishes.\n   */\n\n\n  save(options\n  /*:: ?: FullOptions*/\n  ) {\n    options = options || {};\n\n    options.requestTask = task => this._requestTask = task;\n\n    options.metadata = this._metadata;\n    options.tags = this._tags;\n\n    const controller = _CoreManager.default.getFileController();\n\n    if (!this._previousSave) {\n      if (this._source.format === 'file') {\n        this._previousSave = controller.saveFile(this._name, this._source, options).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._data = null;\n          this._requestTask = null;\n          return this;\n        });\n      } else if (this._source.format === 'uri') {\n        this._previousSave = controller.download(this._source.uri, options).then(result => {\n          if (!(result && result.base64)) {\n            return {};\n          }\n\n          const newSource = {\n            format: 'base64',\n            base64: result.base64,\n            type: result.contentType\n          };\n          this._data = result.base64;\n          this._requestTask = null;\n          return controller.saveBase64(this._name, newSource, options);\n        }).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._requestTask = null;\n          return this;\n        });\n      } else {\n        this._previousSave = controller.saveBase64(this._name, this._source, options).then(res => {\n          this._name = res.name;\n          this._url = res.url;\n          this._requestTask = null;\n          return this;\n        });\n      }\n    }\n\n    if (this._previousSave) {\n      return this._previousSave;\n    }\n  }\n  /**\n   * Aborts the request if it has already been sent.\n   */\n\n\n  cancel() {\n    if (this._requestTask && typeof this._requestTask.abort === 'function') {\n      this._requestTask.abort();\n    }\n\n    this._requestTask = null;\n  }\n  /**\n   * Deletes the file from the Parse cloud.\n   * In Cloud Code and Node only with Master Key\n   *\n   * @return {Promise} Promise that is resolved when the delete finishes.\n   */\n\n\n  destroy() {\n    if (!this._name) {\n      throw new Error('Cannot delete an unsaved ParseFile.');\n    }\n\n    const controller = _CoreManager.default.getFileController();\n\n    return controller.deleteFile(this._name).then(() => {\n      this._data = null;\n      this._requestTask = null;\n      return this;\n    });\n  }\n\n  toJSON()\n  /*: { name: ?string, url: ?string }*/\n  {\n    return {\n      __type: 'File',\n      name: this._name,\n      url: this._url\n    };\n  }\n\n  equals(other\n  /*: mixed*/\n  )\n  /*: boolean*/\n  {\n    if (this === other) {\n      return true;\n    } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n    return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n  }\n  /**\n   * Sets metadata to be saved with file object. Overwrites existing metadata\n   * @param {Object} metadata Key value pairs to be stored with file object\n   */\n\n\n  setMetadata(metadata\n  /*: any*/\n  ) {\n    if (metadata && typeof metadata === 'object') {\n      Object.keys(metadata).forEach(key => {\n        this.addMetadata(key, metadata[key]);\n      });\n    }\n  }\n  /**\n   * Sets metadata to be saved with file object. Adds to existing metadata\n   * @param {String} key\n   * @param {Mixed} value\n   */\n\n\n  addMetadata(key\n  /*: string*/\n  , value\n  /*: any*/\n  ) {\n    if (typeof key === 'string') {\n      this._metadata[key] = value;\n    }\n  }\n  /**\n   * Sets tags to be saved with file object. Overwrites existing tags\n   * @param {Object} tags Key value pairs to be stored with file object\n   */\n\n\n  setTags(tags\n  /*: any*/\n  ) {\n    if (tags && typeof tags === 'object') {\n      Object.keys(tags).forEach(key => {\n        this.addTag(key, tags[key]);\n      });\n    }\n  }\n  /**\n   * Sets tags to be saved with file object. Adds to existing tags\n   * @param {String} key\n   * @param {Mixed} value\n   */\n\n\n  addTag(key\n  /*: string*/\n  , value\n  /*: string*/\n  ) {\n    if (typeof key === 'string') {\n      this._tags[key] = value;\n    }\n  }\n\n  static fromJSON(obj)\n  /*: ParseFile*/\n  {\n    if (obj.__type !== 'File') {\n      throw new TypeError('JSON object does not represent a ParseFile');\n    }\n\n    const file = new ParseFile(obj.name);\n    file._url = obj.url;\n    return file;\n  }\n\n  static encodeBase64(bytes\n  /*: Array<number>*/\n  )\n  /*: string*/\n  {\n    const chunks = [];\n    chunks.length = Math.ceil(bytes.length / 3);\n\n    for (let i = 0; i < chunks.length; i++) {\n      const b1 = bytes[i * 3];\n      const b2 = bytes[i * 3 + 1] || 0;\n      const b3 = bytes[i * 3 + 2] || 0;\n      const has2 = i * 3 + 1 < bytes.length;\n      const has3 = i * 3 + 2 < bytes.length;\n      chunks[i] = [b64Digit(b1 >> 2 & 0x3F), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0F), has2 ? b64Digit(b2 << 2 & 0x3C | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3F) : '='].join('');\n    }\n\n    return chunks.join('');\n  }\n\n}\n\nconst DefaultController = {\n  saveFile: async function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'file') {\n      throw new Error('saveFile can only be used with File-type sources.');\n    }\n\n    const base64Data = await new Promise((res, rej) => {\n      // eslint-disable-next-line no-undef\n      const reader = new FileReader();\n      reader.readAsDataURL(source.file);\n\n      reader.onload = () => res(reader.result);\n\n      reader.onerror = error => rej(error);\n    }); // we only want the data after the comma\n    // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n    const [first, second] = base64Data.split(','); // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n    // use the entire string instead\n\n    const data = second ? second : first;\n    const newSource = {\n      format: 'base64',\n      base64: data,\n      type: source.type || (source.file ? source.file.type : null)\n    };\n    return await DefaultController.saveBase64(name, newSource, options);\n  },\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    const data\n    /*: { base64: any; _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return new Promise((resolve, reject) => {\n        const client = uri.indexOf('https') === 0 ? require('https') : require('http');\n        const req = client.get(uri, resp => {\n          resp.setEncoding('base64');\n          let base64 = '';\n          resp.on('data', data => base64 += data);\n          resp.on('end', () => {\n            resolve({\n              base64,\n              contentType: resp.headers['content-type']\n            });\n          });\n        });\n        req.on('abort', () => {\n          resolve({});\n        });\n        req.on('error', reject);\n        options.requestTask(req);\n      });\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        const bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name) {\n    const headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID'),\n      'X-Parse-Master-Key': _CoreManager.default.get('MASTER_KEY')\n    };\n\n    let url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(response => {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return Promise.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n\n  _setXHR(xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  }\n\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;"},"lineCount":707}},"error":null,"hash":"9c0c18264af6411094697d9f68690f6b","cacheData":{"env":{}}}